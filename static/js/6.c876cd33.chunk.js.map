{"version":3,"sources":["api/index.ts","lib/http.ts","page/nest/User.tsx"],"names":["api","baseURL","client","this","axios","create","config","request","response","data","status","url","source","CancelToken","method","cancelToken","token","cancel","interceptors","process","User","useEffect","get","getUserInfo","cancelGetUserInfo","list","getUsers","cancelGetUsers","then","res","console","log"],"mappings":"iSAEMA,EAAM,I,WCwBV,WAAYC,GAAkB,yBADtBC,YACqB,EAC3BC,KAAKD,OAASE,IAAMC,OAAO,CAAEJ,Y,6FAOGK,G,uFACTH,KAAKD,OAAOK,QAAwBD,G,OAArDE,E,YAEEA,EAASC,KAAKC,O,OACf,I,iFAKAF,EAASC,M,iIAGME,GAAwC,IAAD,OACvDC,EAASR,IAAMS,YAAYD,SAajC,MAAO,CAXS,WAAoC,IAAnCN,EAAkC,uDAAP,GAC1C,OAAO,EAAKC,QAAL,yBACLI,MACAG,OAAQ,OACLR,GAHE,IAILS,YAAaH,EAAOI,UAIT,kBAAMJ,EAAOK,a,2BAKLN,GAAyC,IAAD,OACzDC,EAASR,IAAMS,YAAYD,SAajC,MAAO,CAXS,WAAoC,IAAnCN,EAAkC,uDAAP,GAC1C,OAAO,EAAKC,QAAL,yBACLI,MACAG,OAAQ,OACLR,GAHE,IAILS,YAAaH,EAAOI,UAIT,kBAAMJ,EAAOK,a,2BAKfN,GAAyC,IAAD,OAC/CC,EAASR,IAAMS,YAAYD,SAcjC,MAAO,CAZS,SAACH,GAAkD,IAAnCH,EAAkC,uDAAP,GACzD,OAAO,EAAKC,QAAL,yBACLI,MACAG,OAAQ,OACRL,QACGH,GAJE,IAKLS,YAAaH,EAAOI,UAIT,kBAAMJ,EAAOK,a,0BAKhBN,GAAwC,IAAD,OAC7CC,EAASR,IAAMS,YAAYD,SAcjC,MAAO,CAZS,SAACH,GAAkD,IAAnCH,EAAkC,uDAAP,GACzD,OAAO,EAAKC,QAAL,yBACLI,MACAG,OAAQ,MACRL,QACGH,GAJE,IAKLS,YAAaH,EAAOI,UAIT,kBAAMJ,EAAOK,a,6BAKbN,GAA2C,IAAD,OACnDC,EAASR,IAAMS,YAAYD,SAajC,MAAO,CAXS,WAAoC,IAAnCN,EAAkC,uDAAP,GAC1C,OAAO,EAAKC,QAAL,yBACLI,MACAG,OAAQ,UACLR,GAHE,IAILS,YAAaH,EAAOI,UAIT,kBAAMJ,EAAOK,a,mCAjG5B,OAAOd,KAAKD,OAAOgB,iB,KD7BX,CAAeC,8B,OEGZ,SAASC,IAoBtB,OAnBAC,qBAAU,WAAO,IAAD,EAC2BrB,EAAIsB,IAAI,iBADnC,mBACPC,EADO,KACMC,EADN,OAEqBxB,EAAIyB,KAAa,UAFtC,mBAEPC,EAFO,KAEGC,EAFH,KAYd,OARAJ,IAAcK,MAAK,SAACC,GAClBC,QAAQC,IAAIF,MAGdH,IAAWE,MAAK,SAACC,GACfC,QAAQC,IAAIF,EAAIpB,SAGX,WACLqB,QAAQC,IAAI,4BACZP,IACAG,OAED,IAGD,6BACE,yCAEA,sRAMA","file":"static/js/6.c876cd33.chunk.js","sourcesContent":["import { HTTPClient } from \"@/lib/http\";\n\nconst api = new HTTPClient(process.env.REACT_APP_API || \"\");\n\nexport { api };\n","import axios, { AxiosInstance, AxiosRequestConfig } from \"axios\";\n\ninterface ApiResponse<T = unknown> {\n  status: number;\n  data: T;\n  message: string;\n}\n\ninterface ApiResponseList<T> {\n  status: number;\n  data: T[];\n  message: string;\n  meta: { page: number; per_page: number; total: number };\n}\n\ntype HTTPClientConfig = AxiosRequestConfig;\n\ntype GetHook<T> = (config?: HTTPClientConfig) => Promise<ApiResponse<T>>;\ntype ListHook<T> = (config?: HTTPClientConfig) => Promise<ApiResponseList<T>>;\ntype PostHook<T> = (data: unknown, config?: HTTPClientConfig) => Promise<ApiResponse<T>>;\ntype PutHook<T> = (data: unknown, config?: HTTPClientConfig) => Promise<ApiResponse<T>>;\ntype DeleteHook<T> = (config?: HTTPClientConfig) => Promise<ApiResponse<T>>;\ntype CancelFunc = () => void;\n\nclass HTTPClient {\n  private client: AxiosInstance;\n  constructor(baseURL: string) {\n    this.client = axios.create({ baseURL });\n  }\n\n  public get interceptors() {\n    return this.client.interceptors;\n  }\n\n  public async request<T = unknown>(config: HTTPClientConfig): Promise<ApiResponse<T>> {\n    const response = await this.client.request<ApiResponse<T>>(config);\n\n    switch (response.data.status) {\n      case 0:\n        // 处理相关的事情\n        break;\n    }\n\n    return response.data;\n  }\n\n  public get<T = unknown>(url: string): [GetHook<T>, CancelFunc] {\n    const source = axios.CancelToken.source();\n\n    const request = (config: HTTPClientConfig = {}) => {\n      return this.request<T>({\n        url,\n        method: \"GET\",\n        ...config,\n        cancelToken: source.token,\n      });\n    };\n\n    const cancel = () => source.cancel();\n\n    return [request, cancel];\n  }\n\n  public list<T = unknown>(url: string): [ListHook<T>, CancelFunc] {\n    const source = axios.CancelToken.source();\n\n    const request = (config: HTTPClientConfig = {}) => {\n      return this.request({\n        url,\n        method: \"GET\",\n        ...config,\n        cancelToken: source.token,\n      }) as Promise<ApiResponseList<T>>;\n    };\n\n    const cancel = () => source.cancel();\n\n    return [request, cancel];\n  }\n\n  public post<T>(url: string): [PostHook<T>, CancelFunc] {\n    const source = axios.CancelToken.source();\n\n    const request = (data: unknown, config: HTTPClientConfig = {}) => {\n      return this.request<T>({\n        url,\n        method: \"POST\",\n        data,\n        ...config,\n        cancelToken: source.token,\n      });\n    };\n\n    const cancel = () => source.cancel();\n\n    return [request, cancel];\n  }\n\n  public put<T>(url: string): [PutHook<T>, CancelFunc] {\n    const source = axios.CancelToken.source();\n\n    const request = (data: unknown, config: HTTPClientConfig = {}) => {\n      return this.request<T>({\n        url,\n        method: \"PUT\",\n        data,\n        ...config,\n        cancelToken: source.token,\n      });\n    };\n\n    const cancel = () => source.cancel();\n\n    return [request, cancel];\n  }\n\n  public delete<T>(url: string): [DeleteHook<T>, CancelFunc] {\n    const source = axios.CancelToken.source();\n\n    const request = (config: HTTPClientConfig = {}) => {\n      return this.request<T>({\n        url,\n        method: \"DELETE\",\n        ...config,\n        cancelToken: source.token,\n      });\n    };\n\n    const cancel = () => source.cancel();\n\n    return [request, cancel];\n  }\n}\n\nexport { HTTPClient };\n","import React, { useEffect } from \"react\";\n\nimport { api } from \"@/api\";\nimport \"./User.less\";\n\nexport default function User() {\n  useEffect(() => {\n    const [getUserInfo, cancelGetUserInfo] = api.get(\"/user/profile\");\n    const [getUsers, cancelGetUsers] = api.list<number>(\"/users\");\n\n    getUserInfo().then((res) => {\n      console.log(res);\n    });\n\n    getUsers().then((res) => {\n      console.log(res.data);\n    });\n\n    return () => {\n      console.log(\"取消请求\");\n      cancelGetUserInfo();\n      cancelGetUsers();\n    };\n  }, []);\n\n  return (\n    <div>\n      <h3>User Page</h3>\n\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam aliquet, purus vitae eleifend tristique, lorem\n        magna volutpat orci, et vehicula erat erat nec elit. Aenean posuere nunc ac cursus facilisis. Aenean vel porta\n        turpis, ut iaculis justo.\n      </p>\n\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam aliquet, purus vitae eleifend tristique, lorem\n        magna volutpat orci, et vehicula erat erat nec elit. Aenean posuere nunc ac cursus facilisis. Aenean vel porta\n        turpis, ut iaculis justo.\n      </p>\n    </div>\n  );\n}\n"],"sourceRoot":""}