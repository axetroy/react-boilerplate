{"version":3,"sources":["store/index.tsx","router/index.ts","component/Header.tsx","component/Footer.tsx","component/ReuseTab.tsx","layout/Main.tsx","App.tsx","serviceWorker.ts","index.tsx","component/Header.module.css","component/Footer.module.css"],"names":["globalContext","React","createContext","userInfo","menu","nav","setUserInfo","setMenu","setNav","Provider","props","useState","state","value","children","routes","title","path","name","Component","lazy","exact","menus","key","link","icon","MailOutlined","AppstoreOutlined","Header","current","setCurrent","history","useHistory","useContext","useEffect","route","find","v","location","pathname","document","findIndex","newNav","length","splice","push","className","style","header","onClick","e","goto","selectedKeys","mode","map","Item","color","Footer","footer","ReuseTab","tabs","tab","MainLayout","prop","App","match","CSSTransition","in","timeout","classNames","unmountOnExit","onExited","node","fallback","spinning","Boolean","window","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.2b9364db.chunk.js","sourcesContent":["import React, { PropsWithChildren, useState } from \"react\";\n\ninterface UserInfo {\n  id: string;\n  username: string;\n}\n\ninterface Nav {\n  title: string;\n  path: string;\n}\n\ninterface IGlobalState {\n  userInfo: UserInfo | null;\n  menu: string[];\n  nav: Nav[];\n\n  setUserInfo(userInfo: any): void;\n\n  setMenu(menu: string[]): void;\n\n  setNav(nav: Nav[]): void;\n}\n\nconst initState: IGlobalState = {\n  userInfo: null,\n  menu: [],\n  nav: [],\n  setUserInfo(userInfo: UserInfo) {},\n  setMenu(menu: string[]) {},\n  setNav(nav: Nav[]) {},\n};\n\nexport const globalContext = React.createContext(initState);\n\nexport function Provider(props: PropsWithChildren<any>) {\n  const [menu, setMenu] = useState([] as string[]);\n  const [nav, setNav] = useState([] as Nav[]);\n  const [userInfo, setUserInfo] = useState<UserInfo | null>(null);\n\n  const state: IGlobalState = {\n    menu,\n    setMenu,\n    nav,\n    setNav,\n    userInfo,\n    setUserInfo,\n  };\n\n  return <globalContext.Provider value={state}>{props.children}</globalContext.Provider>;\n}\n","import React from \"react\";\n\nconst routes = [\n  {\n    title: \"其他页\",\n    path: \"/other\",\n    name: \"Other\",\n    Component: React.lazy(() => import(\"../page/Other\")),\n  },\n  {\n    title: \"用户页\",\n    path: \"/nest/user\",\n    name: \"User\",\n    Component: React.lazy(() => import(\"../page/nest/User\")),\n  },\n  {\n    title: \"测试页1\",\n    path: \"/test1\",\n    name: \"Test1\",\n    Component: React.lazy(() => import(\"../page/Test1\")),\n  },\n  {\n    title: \"测试页2\",\n    path: \"/test2\",\n    name: \"Test2\",\n    Component: React.lazy(() => import(\"../page/Test2\")),\n  },\n  {\n    title: \"测试页3\",\n    path: \"/test3\",\n    name: \"Test3\",\n    Component: React.lazy(() => import(\"../page/Test3\")),\n  },\n  {\n    title: \"测试页4\",\n    path: \"/test4\",\n    name: \"Test4\",\n    Component: React.lazy(() => import(\"../page/Test4\")),\n  },\n  {\n    title: \"首页\",\n    path: \"/\",\n    exact: true,\n    name: \"Home\",\n    Component: React.lazy(() => import(\"../page/Index\")),\n  },\n];\n\nexport { routes };\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Menu, Tag } from \"antd\";\nimport { MailOutlined, AppstoreOutlined } from \"@ant-design/icons\";\n\nimport { routes } from \"@/router\";\nimport { globalContext } from \"@/store\";\nimport style from \"./Header.module.css\";\n\ninterface MenuData {\n  title: string;\n  key: string;\n  link: string;\n  icon?: React.ReactNode;\n}\n\nconst menus: MenuData[] = [\n  {\n    title: \"首页\",\n    key: \"home\",\n    link: \"/\",\n    icon: <MailOutlined />,\n  },\n  {\n    title: \"其他\",\n    key: \"other\",\n    link: \"/other\",\n    icon: <AppstoreOutlined />,\n  },\n  {\n    title: \"用户页\",\n    key: \"nest_user\",\n    link: \"/nest/user\",\n    icon: <AppstoreOutlined />,\n  },\n  {\n    title: \"测试页1\",\n    key: \"test1\",\n    link: \"/test1\",\n    icon: <AppstoreOutlined />,\n  },\n  {\n    title: \"测试页2\",\n    key: \"test2\",\n    link: \"/test2\",\n    icon: <AppstoreOutlined />,\n  },\n  {\n    title: \"测试页3\",\n    key: \"test3\",\n    link: \"/test3\",\n    icon: <AppstoreOutlined />,\n  },\n  {\n    title: \"测试页4\",\n    key: \"test4\",\n    link: \"/test4\",\n    icon: <AppstoreOutlined />,\n  },\n];\n\nexport default function Header() {\n  const [current, setCurrent] = useState(\"home\");\n  const history = useHistory();\n  const { nav, setNav } = useContext(globalContext);\n\n  /**\n   * 跳转菜单\n   * @param key\n   */\n  function goto(key: string) {\n    setCurrent(key);\n    const menu = menus.find((v) => v.key === key);\n\n    if (menu && menu.link) {\n      history.push(menu.link);\n    }\n  }\n\n  useEffect(() => {\n    const route = routes.find((v) => v.path === history.location.pathname);\n\n    if (route) {\n      document.title = route.title;\n\n      const navIndex = nav.findIndex((v) => v.path === history.location.pathname);\n\n      // 如果之前已经有这个路由了\n      if (navIndex >= 0) {\n        return;\n      }\n\n      const newNav = [...nav];\n\n      // 如果当前菜单大于 8 个\n      // 那么删除前面那个\n      if (nav.length >= 5) {\n        newNav.splice(0, 1);\n      }\n\n      newNav.push({\n        title: route.title,\n        path: history.location.pathname,\n      });\n\n      setNav(newNav);\n    }\n  }, [history.location, nav, setNav]);\n\n  return (\n    <>\n      <Menu className={style.header} onClick={(e) => goto(e.key + \"\")} selectedKeys={[current]} mode=\"horizontal\">\n        {menus.map((v) => {\n          return (\n            <Menu.Item key={v.key} icon={v.icon}>\n              {v.title}\n            </Menu.Item>\n          );\n        })}\n      </Menu>\n\n      {nav.map((v) => {\n        return (\n          <Tag key={v.path} color={\"#108ee9\"} onClick={() => history.push(v.path)}>\n            {v.title}\n          </Tag>\n        );\n      })}\n    </>\n  );\n}\n","import * as React from \"react\";\nimport style from \"./Footer.module.css\";\n\nexport default function Footer() {\n  return (\n    <div className={style.footer}>\n      <p>footer</p>\n    </div>\n  );\n}\n","import React, { PropsWithChildren } from \"react\";\n\ninterface ITab {\n  key: string;\n  name: string;\n  path: string;\n}\n\ninterface IReuseTab extends PropsWithChildren<any> {\n  tabs: ITab[];\n}\n\nexport default function ReuseTab({ tabs }: IReuseTab) {\n  return (\n    <div>\n      {tabs.map((tab) => {\n        return <span key={tab.key}>{tab.name}</span>;\n      })}\n    </div>\n  );\n}\n","import React, { PropsWithChildren } from \"react\";\n\nimport Header from \"../component/Header\";\nimport Footer from \"../component/Footer\";\nimport ReuseTab from \"../component/ReuseTab\";\n\ninterface Props extends PropsWithChildren<any> {}\n\nexport function MainLayout(prop: Props) {\n  return (\n    <div {...prop}>\n      <Header />\n      <ReuseTab tabs={[]} />\n      <div className=\"main-content\">{prop.children}</div>\n      <Footer />\n    </div>\n  );\n}\n","import React, { Suspense } from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { Spin } from \"antd\";\n\nimport { Provider } from \"./store\";\nimport { routes } from \"./router\";\nimport { MainLayout } from \"./layout/Main\";\nimport \"./App.less\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <MainLayout className=\"container\">\n          {routes.map(({ path, exact, Component }) => {\n            return (\n              <Route key={path} exact={!!exact} path={path}>\n                {({ match }) => (\n                  <CSSTransition\n                    in={match !== null}\n                    timeout={300}\n                    classNames=\"page\"\n                    unmountOnExit\n                    onExited={(node) => {\n                      // console.log(node)\n                    }}\n                  >\n                    <div className=\"page\">\n                      <Suspense fallback={<Spin spinning={true}>Loading...</Spin>}>\n                        <Component />\n                      </Suspense>\n                    </div>\n                  </CSSTransition>\n                )}\n              </Route>\n            );\n          })}\n        </MainLayout>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./index.less\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3guiD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2sUfP\"};"],"sourceRoot":""}